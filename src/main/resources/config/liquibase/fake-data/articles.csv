id;publication_date;publication_time;content;access_modes_id;employee_id;title;image_url
1;2023-03-20;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};1;1;–í –í–ì–£ –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–æ—à–ª–∏ ¬´–í—å—é–Ω–æ–≤—Å–∫–∏–µ —á—Ç–µ–Ω–∏—è¬ª;https://www.alt.ranepa.ru/resampled/news/2015/20150213-DSC_4508_sq900x600.jpg
2;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};2;2;–ù–æ–≤–∞—è —É—á–µ–±–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è –§–ö–ù;https://www.cs.vsu.ru/wp-content/uploads/2022/05/DSC09126.jpg
3;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};1;1;–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ 19 –∞–ø—Ä–µ–ª—è 2023 –≥–æ–¥–∞;https://infotanka.ru/img/timetable-before.png
4;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};1;1;–°—Ç—É–¥–µ–Ω—Ç—ã –§–ú–û –í–ì–£ –∏ –ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –æ–±—Å—É–¥–∏–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã;https://www.vsu.ru/ru/news/16364/images/79224/thumbnail
5;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};1;2;–ö–∞–∫ –ø–∏—Å–∞—Ç—å –Ω–∞—É—á–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã? –õ–∏–∫–±–µ–∑;https://www.vsu.ru/ru/news/16354/images/79176/thumbnail
6;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};1;1;–í –í–ì–£ ‚Äî –≤—ã—Å—Ç–∞–≤–∫–∞ ¬´–ö–∏—Ç–∞–π—Å–∫–∏–π –¥—Ä–∞–∫–æ–Ω¬ª —á–µ—à—Å–∫–æ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞;https://www.vsu.ru/ru/news/16353/images/79169/thumbnail
7;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};2;2;–í–ì–£ –∑–∞–Ω—è–ª 15 –º–µ—Å—Ç–æ –≤ ¬´–ì–ª–æ–±–∞–ª—å–Ω–æ–º —Å–≤–æ–¥–Ω–æ–º —Ä–µ–π—Ç–∏–Ω–≥–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –≤—É–∑–æ–≤ –†–æ—Å—Å–∏–∏ 2023¬ª;https://www.vsu.ru/ru/news/16351/images/79162/thumbnail
8;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};3;1;–í –ö–æ–ª—å—Ü–æ–≤—Å–∫–æ–π –≥–∏–º–Ω–∞–∑–∏–∏ –æ—Ç–∫—Ä—ã–ª–∞—Å—å –≤—ã—Å—Ç–∞–≤–∫–∞ —Ä–µ–∫—Ç–æ—Ä–∞ –í–ì–£;https://www.vsu.ru/ru/news/16334/images/79063/thumbnail
9;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};2;1;–¶–µ–Ω—Ç—Ä –∫–∞—Ä—å–µ—Ä—ã –í–ì–£ ‚Äì —Å–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–π —è—Ä–º–∞—Ä–∫–∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ä–µ–≥–∏–æ–Ω–µ;https://www.vsu.ru/ru/news/16337/images/79080/thumbnail
10;2023-03-21;10:00;{time: 1681989139073,blocks: [{id: "mhTl6ghSkV",type: "paragraph",data: {text: "Hey. Meet the new Editor. On this picture you can see it in action. Then, try a demo ü§ì",} ,} ,{id: "l98dyx3yjb",type: "header",data: {text: "Key features",level: 3,} ,} ,{id: "os_YI4eub4",type: "list",data: {type: "unordered",items: ["It is a block-style editor","It returns clean data output in JSON","Designed to be extendable and pluggable with a <a href="https://editorjs.io/creating-a-block-tool">simple API</a>",] ,} ,} ,{id: "1yKeXKxN7-",type: "header",data: {text: "What does it mean ¬´block-styled editor¬ª",level: 3,} ,} ,{id: "TcUNySG15P",type: "paragraph",data: {text: "Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc. Each of them is an independent <sup data-tune="footnotes">1</sup> contenteditable element (or more complex structure) provided by Plugin and united by Editor's Core.",} ,tunes: {footnotes: ["It works more stable then in other WYSIWYG editors. Same time it has smooth and well-known arrow navigation behavior like classic editors.",] ,} ,} ,{id: "M3UXyblhAo",type: "header",data: {text: "What does it mean clean data output?",level: 3,} ,} ,{id: "KOcIofZ3Z1",type: "paragraph",data: {text: "There are dozens of ready-to-use Blocks and a simple API <sup data-tune="footnotes">2</sup> for creating any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA buttons, and even games.",} ,tunes: {footnotes: ["Just take a look at our Creating Block Tool guide. You'll be surprised.",] ,} ,} ,{id: "ksCokKAhQw",type: "paragraph",data: {text: "Classic WYSIWYG editors produce raw HTML-markup with both content data and content appearance. On the contrary, <mark class="cdx-marker">Editor.js outputs JSON object</mark> with data of each Block.",} ,} ,{id: "XKNT99-qqS",type: "attaches",data: {file: {url: "https://drive.google.com/user/catalog/my-file.pdf",size: 12902,name: "file.pdf",extension: "pdf",} ,title: "My file",} ,} ,{id: "7RosVX2kcH",type: "paragraph",data: {text: "Given data can be used as you want: render with HTML for Web clients, render natively for mobile apps, create the markup for Facebook Instant Articles or Google AMP, generate an audio version, and so on.",} ,} ,{id: "eq06PsNsab",type: "paragraph",data: {text: "Clean data is useful to sanitize, validate and process on the backend.",} ,} ,{id: "hZAjSnqYMX",type: "image",data: {file: {url: "assets/codex2x.png",} ,withBorder: false,withBackground: false,stretched: true,caption: "CodeX Code Camp 2019",} ,} ,] ,};1;1;–£—á—ë–Ω—ã–µ –§–ö–ù –≤—ã–∏–≥—Ä–∞–ª–∏ –≥—Ä–∞–Ω—Ç –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ –≤–∑–∞–∏–º–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ ¬´—á–µ–ª–æ–≤–µ–∫-–∫–æ–º–ø—å—é—Ç–µ—Ä¬ª;https://www.vsu.ru/ru/news/16302/images/78886/thumbnail
